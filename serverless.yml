service: parser

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'prod'}
  timeout: 60
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - ${ssm:/echo/ddb/podcasts/arn}
        - ${ssm:/echo/ddb/episodes/arn}
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
      Resource:
        - ${ssm:/echo/sns/resize/arn}
  environment:
    stage: ${self:provider.stage}
    PI_API_KEY: ${ssm:/echo/pi/key}
    PI_API_SECRET: ${ssm:/echo/pi/secret~true}
    RESIZE_SNS: ${ssm:/echo/sns/resize/arn}

functions:
  graph:
    handler: src/handler.graph
    events:
      - http:
          path: /
          method: get
      - http:
          path: /
          method: post

  parser:
    handler: src/handler.parse
    events:
      - http:
          path: /parse
          method: post
      - sns:
          arn: ${ssm:/echo/sns/parser/arn}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 9000
    lambdaPort: 3003
    noPrependStageInUrl: true
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true
